<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shangma.cn.mapper.ReturndetailMapper">
  <resultMap id="BaseResultMap" type="com.shangma.cn.entity.Returndetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="return_site" jdbcType="VARCHAR" property="returnSite" />
    <result column="return_because" jdbcType="VARCHAR" property="returnBecause" />
    <result column="return_note" jdbcType="VARCHAR" property="returnNote" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_id, return_site, return_because, return_note
  </sql>
  <select id="selectByExample" parameterType="com.shangma.cn.entity.ReturndetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_returndetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_returndetail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_returndetail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shangma.cn.entity.ReturndetailExample">
    delete from t_returndetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shangma.cn.entity.Returndetail">
    insert into t_returndetail (id, goods_id, return_site, 
      return_because, return_note)
    values (#{id,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{returnSite,jdbcType=VARCHAR}, 
      #{returnBecause,jdbcType=VARCHAR}, #{returnNote,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shangma.cn.entity.Returndetail">
    insert into t_returndetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="returnSite != null">
        return_site,
      </if>
      <if test="returnBecause != null">
        return_because,
      </if>
      <if test="returnNote != null">
        return_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="returnSite != null">
        #{returnSite,jdbcType=VARCHAR},
      </if>
      <if test="returnBecause != null">
        #{returnBecause,jdbcType=VARCHAR},
      </if>
      <if test="returnNote != null">
        #{returnNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shangma.cn.entity.ReturndetailExample" resultType="java.lang.Long">
    select count(*) from t_returndetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_returndetail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.returnSite != null">
        return_site = #{record.returnSite,jdbcType=VARCHAR},
      </if>
      <if test="record.returnBecause != null">
        return_because = #{record.returnBecause,jdbcType=VARCHAR},
      </if>
      <if test="record.returnNote != null">
        return_note = #{record.returnNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_returndetail
    set id = #{record.id,jdbcType=BIGINT},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      return_site = #{record.returnSite,jdbcType=VARCHAR},
      return_because = #{record.returnBecause,jdbcType=VARCHAR},
      return_note = #{record.returnNote,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shangma.cn.entity.Returndetail">
    update t_returndetail
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="returnSite != null">
        return_site = #{returnSite,jdbcType=VARCHAR},
      </if>
      <if test="returnBecause != null">
        return_because = #{returnBecause,jdbcType=VARCHAR},
      </if>
      <if test="returnNote != null">
        return_note = #{returnNote,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shangma.cn.entity.Returndetail">
    update t_returndetail
    set goods_id = #{goodsId,jdbcType=BIGINT},
      return_site = #{returnSite,jdbcType=VARCHAR},
      return_because = #{returnBecause,jdbcType=VARCHAR},
      return_note = #{returnNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>